// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/bids.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace BiddingService {
  public static partial class GrpcBid
  {
    static readonly string __ServiceName = "GrpcBid";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BiddingService.GetHighBidRequest> __Marshaller_GetHighBidRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BiddingService.GetHighBidRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BiddingService.GrpcHighBidResponse> __Marshaller_GrpcHighBidResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BiddingService.GrpcHighBidResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BiddingService.GetBidsRequest> __Marshaller_GetBidsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BiddingService.GetBidsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::BiddingService.GrpcBidsResponse> __Marshaller_GrpcBidsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::BiddingService.GrpcBidsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BiddingService.GetHighBidRequest, global::BiddingService.GrpcHighBidResponse> __Method_GetHighBid = new grpc::Method<global::BiddingService.GetHighBidRequest, global::BiddingService.GrpcHighBidResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHighBid",
        __Marshaller_GetHighBidRequest,
        __Marshaller_GrpcHighBidResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::BiddingService.GetBidsRequest, global::BiddingService.GrpcBidsResponse> __Method_GetBids = new grpc::Method<global::BiddingService.GetBidsRequest, global::BiddingService.GrpcBidsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBids",
        __Marshaller_GetBidsRequest,
        __Marshaller_GrpcBidsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::BiddingService.BidsReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of GrpcBid</summary>
    [grpc::BindServiceMethod(typeof(GrpcBid), "BindService")]
    public abstract partial class GrpcBidBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BiddingService.GrpcHighBidResponse> GetHighBid(global::BiddingService.GetHighBidRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::BiddingService.GrpcBidsResponse> GetBids(global::BiddingService.GetBidsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(GrpcBidBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetHighBid, serviceImpl.GetHighBid)
          .AddMethod(__Method_GetBids, serviceImpl.GetBids).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GrpcBidBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetHighBid, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BiddingService.GetHighBidRequest, global::BiddingService.GrpcHighBidResponse>(serviceImpl.GetHighBid));
      serviceBinder.AddMethod(__Method_GetBids, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::BiddingService.GetBidsRequest, global::BiddingService.GrpcBidsResponse>(serviceImpl.GetBids));
    }

  }
}
#endregion
